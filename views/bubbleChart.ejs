<!DOCTYPE html>
<html lang="en">
<% include template %>
<link href="http://ironsummitmedia.github.io/startbootstrap-modern-business/css/bootstrap.min.css" rel="stylesheet" type="text/css">
<link href="http://ironsummitmedia.github.io/startbootstrap-modern-business/css/modern-business.css" rel="stylesheet" type="text/css">
<style>

text {
  font: 10px sans-serif;
}

</style>

<body onload="getData()">
	<input type="hidden" id="stateName" value="<%=stateName%>"/>
	<input type="hidden" id="companyName" value="<%=companyName%>"/>
	<div class="container">

		<!-- Features Section -->
		<div class="row">
			<div class="col-lg-12">
				<h2 class="page-header"><%=companyName%> - Job Count Visualization</h2>
			</div>
		</div>
		
		<div class="row">
			<div id="bubble"></div>
		</div>
	</div>
	
</body>



<script type="text/javascript">
var root;



function getData(){

	var stateName = document.getElementById('stateName').value;

	var companyName = document.getElementById('companyName').value;

	var url = '/getBubble/'+stateName+'/'+companyName;

	$.get(url, function(data) {

	console.log(data);

	root={

	    "name": "flare",

	    "children": [

	        {
	                   "name": "cluster",

	                    "children": data

	                }

	            ]

	        };
	console.log("test");

	showBubble();

	});
}



function showBubble(){

var diameter = 960,
    format = d3.format(",d"),
    color = d3.scale.category20c();

var bubble = d3.layout.pack()
    .sort(null)
    .size([diameter, diameter])
    .padding(1.5);

var svg = d3.select("#bubble").append("svg")
    .attr("width", diameter)
    .attr("height", diameter)
    .attr("class", "bubble");

  var node = svg.selectAll(".node")
      .data(bubble.nodes(classes(root))
      .filter(function(d) { return !d.children; }))
    .enter().append("g")
      .attr("class", "node")
      .attr("transform", function(d) { return "translate(" + d.x + "," + d.y + ")"; });

  node.append("title")
      .text(function(d) { return d.className + ": " + format(d.value); });

  node.append("circle")
      .attr("r", function(d) { return d.r; })
      .style("fill", function(d) { return color(d.packageName); });

  node.append("text")
      .attr("dy", ".3em")
      .style("text-anchor", "middle")
      .text(function(d) { return d.className.substring(0, d.r / 3); });


// Returns a flattened hierarchy containing all leaf nodes under the root.
function classes(root) {
  var classes = [];

  function recurse(name, node) {
    if (node.children) node.children.forEach(function(child) { recurse(node.name, child); });
    else classes.push({packageName: name, className: node.name, value: node.size});
  }

  recurse(null, root);
  return {children: classes};
}

d3.select(self.frameElement).style("height", diameter + "px");
}
</script>


<script src="http://d3js.org/d3.v3.min.js"></script>
<script src="//code.jquery.com/jquery-1.11.0.min.js"></script>
 

</html>